set( appName nee_debugger )

file( GLOB ${appName}_srcs "*.cc" "*.cu" "*.cpp" )
if( enable_cuda )
  set_source_files_properties(  ${appName}_srcs PROPERTIES LANGUAGE CUDA )
else()
  foreach( srcname ${${appName}_srcs} )
    set_source_files_properties( ${srcname} PROPERTIES LANGUAGE CXX )
    set_source_files_properties( ${srcname} PROPERTIES COMPILE_FLAGS ${COMPILER_CPP_FILE_FLAG} )
  endforeach()
endif()

add_executable( ${appName} ${${appName}_srcs} )
  
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Constants )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/ThirdParty)
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Containers)
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/CrossSection )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Geometry )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Geometry/lnk3dnt )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/GPU_Utilities )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/IPComm )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Material )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Math_Functions )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/OutputControls )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Parameters )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Particle )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/RayTrace )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Tally )
target_include_directories(${appName} PUBLIC ${CMAKE_SOURCE_DIR}/src/Utilities )
target_include_directories(${appName} PUBLIC ${CMAKE_BINARY_DIR}/src/Parameters )

if( enable_cuda )
  set_target_properties( ${appName} PROPERTIES CUDA_SEPERABLE_COMPILATION ON )
endif()

if( enable_cuda ) 
    target_link_libraries( ${appName} ${CUDA_LIB_PATH} )
    target_link_libraries( ${appName} ${CUDA_LIBRARIES} )
endif()

target_include_directories(${appName} PUBLIC ${MPI_INCLUDE_DIRS} )
target_include_directories(${appName} PRIVATE ${MPI_CXX_INCLUDE_PATH} )
target_link_libraries( ${appName} ${MPI_CXX_LIBRARIES} ${MPI_CXX_LINK_FLAGS} )


target_link_libraries( ${appName} Geometry )
target_link_libraries( ${appName} lnk3dnt )
target_link_libraries( ${appName} GPU_Utilities )
target_link_libraries( ${appName} IPComm )
target_link_libraries( ${appName} Material )
target_link_libraries( ${appName} CrossSection )
target_link_libraries( ${appName} Math_Functions )
target_link_libraries( ${appName} OutputControls )
target_link_libraries( ${appName} Particle )
target_link_libraries( ${appName} RayTrace )
target_link_libraries( ${appName} Tally )
